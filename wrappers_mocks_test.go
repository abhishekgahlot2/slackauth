// Code generated by MockGen. DO NOT EDIT.
// Source: wrappers.go
//
// Generated by this command:
//
//	mockgen -destination=wrappers_mocks_test.go -package=slackauth -source wrappers.go
//

// Package slackauth is a generated GoMock package.
package slackauth

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// Mockelementer is a mock of elementer interface.
type Mockelementer struct {
	ctrl     *gomock.Controller
	recorder *MockelementerMockRecorder
}

// MockelementerMockRecorder is the mock recorder for Mockelementer.
type MockelementerMockRecorder struct {
	mock *Mockelementer
}

// NewMockelementer creates a new mock instance.
func NewMockelementer(ctrl *gomock.Controller) *Mockelementer {
	mock := &Mockelementer{ctrl: ctrl}
	mock.recorder = &MockelementerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockelementer) EXPECT() *MockelementerMockRecorder {
	return m.recorder
}

// Element mocks base method.
func (m *Mockelementer) Element(selector string) (inputter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Element", selector)
	ret0, _ := ret[0].(inputter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Element indicates an expected call of Element.
func (mr *MockelementerMockRecorder) Element(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Element", reflect.TypeOf((*Mockelementer)(nil).Element), selector)
}

// Mockinputter is a mock of inputter interface.
type Mockinputter struct {
	ctrl     *gomock.Controller
	recorder *MockinputterMockRecorder
}

// MockinputterMockRecorder is the mock recorder for Mockinputter.
type MockinputterMockRecorder struct {
	mock *Mockinputter
}

// NewMockinputter creates a new mock instance.
func NewMockinputter(ctrl *gomock.Controller) *Mockinputter {
	mock := &Mockinputter{ctrl: ctrl}
	mock.recorder = &MockinputterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockinputter) EXPECT() *MockinputterMockRecorder {
	return m.recorder
}

// Input mocks base method.
func (m *Mockinputter) Input(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Input", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Input indicates an expected call of Input.
func (mr *MockinputterMockRecorder) Input(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Input", reflect.TypeOf((*Mockinputter)(nil).Input), arg0)
}
